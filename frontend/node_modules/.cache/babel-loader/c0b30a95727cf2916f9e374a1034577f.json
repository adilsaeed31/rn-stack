{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/testat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/testat/src/MovieSearch/index.jsx\";\nimport * as React from \"react\"; // Connect redux with component\n\nimport { connect } from \"react-redux\"; // Reducer Actions\n\nimport { movieSuccess, movieProgress, movieFailure } from \"./Actions\"; // Components\n\nimport InfoRow from \"./Components/InfoRow\";\nimport NothingFound from \"./Components/NothingFound\";\nimport { DebounceInput } from \"react-debounce-input\"; // Type assignment\n\nimport { MovieTypes } from \"./Types\"; // Api Service\n\nimport Fetcher from \"./Api\"; // Model\n\nimport MovieSearchModel from \"./Model\";\n\nvar MovieSearch =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MovieSearch, _React$PureComponent);\n\n  function MovieSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      q: \"\",\n      isFirstLoad: true\n    };\n\n    _this.handleSearch = function () {\n      var q = _this.state.q; // dispatching progress action to store\n\n      _this.props.dispatch(movieProgress()); // API call to fetch data\n\n\n      Fetcher.get({\n        search: q\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.Response === \"True\")) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return res.Search.map(function (item) {\n                    return new MovieSearchModel(item);\n                  });\n\n                case 3:\n                  data = _context.sent;\n\n                  // dispatch data to redux store for props mapping\n                  _this.props.dispatch(movieSuccess(data));\n\n                  _this.setState({\n                    isFirstLoad: false\n                  });\n\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  _this.props.dispatch(movieFailure());\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        // dispatch failure props mapping\n        _this.props.dispatch(movieFailure());\n      });\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        q: \"\",\n        isFirstLoad: true\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState({\n        q: e.target.value\n      }, function () {\n        return _this.watchProps;\n      });\n    };\n\n    _this.watchProps = function () {\n      _this.handleSearch();\n    };\n\n    _this.renderItems = function (items) {\n      return items.map(function (item, key) {\n        return React.createElement(InfoRow, {\n          key: key,\n          index: key,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.renderMovies = function () {\n      return _this.props.records.map(function (item, key) {\n        return React.createElement(\"div\", {\n          key: key,\n          className: \"columns is-mobile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, _this.renderItems(item));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MovieSearch, [{\n    key: \"render\",\n    value: function render() {\n      var isFirstLoad = this.state.isFirstLoad;\n      var _this$props = this.props,\n          records = _this$props.records,\n          isLoading = _this$props.isLoading;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"section isBG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container has-text-centered is-bottom-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title has-text-white is-family-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Online Movie Search\"), React.createElement(\"h2\", {\n        className: \"subtitle has-text-white is-family-monospace\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"OMDB Search Tool\"))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-4 is-offset-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(DebounceInput, {\n        className: \"input\",\n        type: \"text\",\n        name: \"q\",\n        minLength: 3,\n        debounceTimeout: 300,\n        onChange: this.onChange,\n        placeholder: \"Search for Movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), isLoading && React.createElement(\"p\", {\n        className: \"has-text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Loading Please wait ...!\"))))), records.length > 0 && !isFirstLoad ? React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.renderMovies())) : records.length === 0 && !isFirstLoad && React.createElement(NothingFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MovieSearch;\n}(React.PureComponent);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var MovieSearchReducer = _ref2.MovieSearchReducer;\n  return {\n    records: MovieSearchReducer.records,\n    isLoading: MovieSearchReducer.isLoading,\n    hasError: MovieSearchReducer.hasError\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieSearch);","map":{"version":3,"sources":["/var/www/html/testat/src/MovieSearch/index.jsx"],"names":["React","connect","movieSuccess","movieProgress","movieFailure","InfoRow","NothingFound","DebounceInput","MovieTypes","Fetcher","MovieSearchModel","MovieSearch","state","q","isFirstLoad","handleSearch","props","dispatch","get","search","then","res","Response","Search","map","item","data","setState","catch","handleReset","onChange","e","target","value","watchProps","renderItems","items","key","renderMovies","records","isLoading","length","PureComponent","mapDispatchToProps","mapStateToProps","MovieSearchReducer","hasError"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from \"react\";\n\n// Connect redux with component\nimport { connect } from \"react-redux\";\n\n// Reducer Actions\nimport { movieSuccess, movieProgress, movieFailure } from \"./Actions\";\n\n// Components\nimport InfoRow from \"./Components/InfoRow\";\nimport NothingFound from \"./Components/NothingFound\";\nimport { DebounceInput } from \"react-debounce-input\";\n\n// Type assignment\nimport { MovieTypes } from \"./Types\";\n\n// Api Service\nimport Fetcher from \"./Api\";\n\n// Model\nimport MovieSearchModel from \"./Model\";\n\ntype Props = {\n  records: Array<MovieTypes>\n};\n\ntype State = {\n  q: string,\n  isFirstLoad: boolean\n};\n\nclass MovieSearch extends React.PureComponent<Props, State> {\n  state = {\n    q: \"\",\n    isFirstLoad: true\n  };\n\n  handleSearch = () => {\n    let { q } = this.state;\n    // dispatching progress action to store\n    this.props.dispatch(movieProgress());\n    // API call to fetch data\n    Fetcher.get({ search: q })\n      .then(async res => {\n        if (res.Response === \"True\") {\n          // Process the modal entity against data here\n          let data = await res.Search.map(item => new MovieSearchModel(item));\n          // dispatch data to redux store for props mapping\n          this.props.dispatch(movieSuccess(data));\n          this.setState({ isFirstLoad: false });\n        } else {\n          this.props.dispatch(movieFailure());\n        }\n      })\n      .catch(res => {\n        // dispatch failure props mapping\n        this.props.dispatch(movieFailure());\n      });\n  };\n\n  handleReset = () => {\n    this.setState({\n      q: \"\",\n      isFirstLoad: true\n    });\n  };\n\n  onChange = e => {\n    this.setState(\n      {\n        q: e.target.value\n      },\n      () => this.watchProps\n    );\n  };\n\n  watchProps = () => {\n    this.handleSearch();\n  };\n\n  renderItems = items => {\n    return items.map((item, key) => (\n      <InfoRow key={key} index={key} item={item} />\n    ));\n  };\n\n  renderMovies = () => {\n    return this.props.records.map((item, key) => {\n      return (\n        <div key={key} className=\"columns is-mobile\">\n          {this.renderItems(item)}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    let { isFirstLoad } = this.state;\n    let { records, isLoading } = this.props;\n    return (\n      <React.Fragment>\n        <section className=\"section isBG\">\n          <div className=\"container has-text-centered is-bottom-2\">\n            <div className=\"columns\">\n              <div className=\"column is-full\">\n                <h1 className=\"title has-text-white is-family-primary\">\n                  Online Movie Search\n                </h1>\n                <h2 className=\"subtitle has-text-white is-family-monospace\">\n                  OMDB Search Tool\n                </h2>\n              </div>\n            </div>\n\n            <div className=\"columns\">\n              <div className=\"column is-4 is-offset-4\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <DebounceInput\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"q\"\n                      minLength={3}\n                      debounceTimeout={300}\n                      onChange={this.onChange}\n                      placeholder=\"Search for Movie\"\n                    />\n                  </div>\n                </div>\n                {isLoading && (\n                  <p className=\"has-text-centered\">Loading Please wait ...!</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n        {records.length > 0 && !isFirstLoad ? (\n          <section className=\"section\">\n            <div className=\"container\">{this.renderMovies()}</div>\n          </section>\n        ) : (\n          records.length === 0 && !isFirstLoad && <NothingFound />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch\n});\n\nconst mapStateToProps = ({ MovieSearchReducer }) => ({\n  records: MovieSearchReducer.records,\n  isLoading: MovieSearchReducer.isLoading,\n  hasError: MovieSearchReducer.hasError\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MovieSearch);\n"]},"metadata":{},"sourceType":"module"}